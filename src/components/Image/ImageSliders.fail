import React, { Component } from "react";

import ImageSlider from "./ImageSlider";

// css
import Button from "@material-ui/core/Button";
import Icon from "@material-ui/core/Icon";
import Grid from "@material-ui/core/Grid";
import SaveIcon from "@material-ui/icons/Save";
import DeleteIcon from "@material-ui/icons/Delete";

import // ImageCanvasState as State,
// ImageCanvasProps as Props
"./typesImage";

interface Props {
   handleCanvasState?(object: State): void;
}
interface State {
   angle: number;
   grayscale: number;
   invert: number;
   huerotate: number;
}

class ImageSliders extends Component<Props, State> {
   constructor(props: Props) {
      super(props);
      this.state = {
         angle: 0,
         grayscale: 0,
         invert: 0,
         huerotate: 0
      };
   }

   public componentDidMount = () => {
      console.log("___sliderscanvas didmount");
   };

   public componentDidUpdate = (): void => {
      console.log("___sliderscanvas didupdate");
                  const { angle, grayscale, invert, huerotate } = this.state;
      // this.props.handleCanvasState({angle, grayscale, invert, huerotate});
   };

   public componentWillUnmount = () => {
      this.handleClearToDefault();
   };

   public handleRotate = (e: any, angle: number): void => {
      // const pixels = this.handlePixels(angle);

      this.setState({ angle });
   };

   public handleGrayscale = (e: any, grayscale: number): void => {
      this.setState({ grayscale });
   };

   public handleInvert = (e: any, invert: number): void => {
      this.setState({ invert });
   };
   public handleHuerotate = (e: any, huerotate: number): void => {
      this.setState({ huerotate });
   };

   public handleClearToDefault = (): void => {
      this.setState({
         angle: 0,
         grayscale: 0,
         invert: 0,
         huerotate: 0
      });
   };

   public render(): JSX.Element {
      console.log("___slider render")
      return (
         <>
            <Grid container spacing={24}>
               <Grid item xs={12} sm={6}>
                  <Grid container spacing={24}>
                     <Grid item xs={12}>
                        <ImageSlider
                           max={360}
                           value={this.state.angle}
                           onChange={this.handleRotate}
                        >
                           Rotate {this.state.angle}
                           deg
                        </ImageSlider>
                     </Grid>
                     <Grid item xs={12}>
                        <ImageSlider
                           max={100}
                           value={this.state.grayscale}
                           onChange={this.handleGrayscale}
                        >
                           Grayscale {this.state.grayscale}%
                        </ImageSlider>
                     </Grid>
                     <Grid item xs={12}>
                        <ImageSlider
                           max={100}
                           value={this.state.invert}
                           onChange={this.handleInvert}
                        >
                           Invert {this.state.invert}%
                        </ImageSlider>
                     </Grid>
                     <Grid item xs={12}>
                        <ImageSlider
                           max={360}
                           value={this.state.huerotate}
                           onChange={this.handleHuerotate}
                        >
                           Hue-rotate {this.state.huerotate}
                           deg
                        </ImageSlider>
                     </Grid>
                  </Grid>
               </Grid>
            </Grid>
         </>
      );
   }
}

export default ImageSliders;
